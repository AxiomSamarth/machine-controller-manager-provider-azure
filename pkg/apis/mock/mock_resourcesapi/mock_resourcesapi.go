// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/i538135/go/src/github.com/gardener/machine-controller-manager-provider-azure/pkg/spi/resourcesapi/resourcesapi.go

// Package mock_resourcesapi is a generated GoMock package.
package mock_resourcesapi

import (
	context "context"
	resources "github.com/Azure/azure-sdk-for-go/profiles/latest/resources/mgmt/resources"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGroupsClientAPI is a mock of GroupsClientAPI interface
type MockGroupsClientAPI struct {
	ctrl     *gomock.Controller
	recorder *MockGroupsClientAPIMockRecorder
}

// MockGroupsClientAPIMockRecorder is the mock recorder for MockGroupsClientAPI
type MockGroupsClientAPIMockRecorder struct {
	mock *MockGroupsClientAPI
}

// NewMockGroupsClientAPI creates a new mock instance
func NewMockGroupsClientAPI(ctrl *gomock.Controller) *MockGroupsClientAPI {
	mock := &MockGroupsClientAPI{ctrl: ctrl}
	mock.recorder = &MockGroupsClientAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGroupsClientAPI) EXPECT() *MockGroupsClientAPIMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockGroupsClientAPI) Get(ctx context.Context, resourceGroupName string) (resources.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, resourceGroupName)
	ret0, _ := ret[0].(resources.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockGroupsClientAPIMockRecorder) Get(ctx, resourceGroupName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGroupsClientAPI)(nil).Get), ctx, resourceGroupName)
}
